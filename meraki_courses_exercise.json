{
    "course": {
        "id": "191",
        "name": "Introduction To Python",
        "logo": "https",
        "notes": null,
        "days_to_complete": null,
        "short_description": "In this topic we will study about the Introduction of Python.",
        "type": "html",
        "course_type": "json",
        "lang_available": [
            "en",
            "hi"
        ],
        "exercises": [
            {
                "id": "6532",
                "parent_exercise_id": null,
                "course_id": "191",
                "name": "how-to-begin",
                "slug": "introduction-of-python_json__how-to-begin_json",
                "sequence_num": 0,
                "review_type": "manual",
                "submission_type": null,
                "github_link": "https://github.com/navgurukul/newton/tree/master/introduction-of-python_json/how-to-begin.json",
                "solution": null,
                "content": [
                    {
                        "component": "header",
                        "variant": 1,
                        "value": "How to begin this course?"
                    },
                    {
                        "component": "youtube",
                        "value": "ccPrUbz1oto"
                    },
                    {
                        "component": "text",
                        "value": "When you will move forward in this course, you will find examples of <span style=\"\">python</span> <span style=\"\">code</span> in different ways. You have to run these examples on <b><span style=\"\">python</span> <span style=\"\">shell</span></b>."
                    },
                    {
                        "component": "text",
                        "value": "Open <b><span style=\"\">python</span> <span style=\"\">shell</span></b> in your laptop."
                    },
                    {
                        "component": "code",
                        "type": "other",
                        "title": "",
                        "value": "$ python"
                    },
                    {
                        "component": "code",
                        "type": "python",
                        "title": "",
                        "value": "<br>print(\"This line will be printed in python.\")<br>print(\"This,another line will also be printed in python\")<br>print(2 + 5)<br>i = 0<br>print(i)<br>while i < 100:<br>    print(\"I will be printed again and again.:)\")<br>"
                    },
                    {
                        "component": "text",
                        "value": "Select the <span style=\"\">code</span> given above, press <span style=\"color: #eb9371; background-color: rgba(39, 41, 43, 0.83); box-shadow: 2px 2px 2px rgba(22, 9, 1, 0.6); border-radius: 2px; padding: 2px\">Ctrl + C</span> together so that the <span style=\"\">code</span> will be copied and then you can go to the <span style=\"\">terminal</span> and paste this <span style=\"\">code</span> by pressing <span style=\"color: #eb9371; background-color: rgba(39, 41, 43, 0.83); box-shadow: 2px 2px 2px rgba(22, 9, 1, 0.6); border-radius: 2px; padding: 2px\">Ctrl + Shift + V</span> on the <span style=\"\">terminal</span>."
                    },
                    {
                        "component": "text",
                        "value": "If you will run this <span style=\"\">code</span> line by line, you will be able to understand the <span style=\"\">code</span> line by line."
                    },
                    {
                        "component": "text",
                        "value": "This complete <span style=\"\">code</span> is doing 4-5 different tasks, how can we break this <span style=\"\">code</span> into parts and understand it, this method is given below and it is going to help you in the future."
                    },
                    {
                        "component": "text",
                        "value": "This is the first line, run this line on the <span style=\"\">terminal</span>, you will be able to see something on the <span style=\"color: #eb9371; background-color: rgba(39, 41, 43, 0.83); box-shadow: 2px 2px 2px rgba(22, 9, 1, 0.6); border-radius: 2px; padding: 2px\">terminal</span>."
                    },
                    {
                        "component": "code",
                        "type": "python",
                        "title": "",
                        "value": "print (\"This line will be printed in python.\")"
                    },
                    {
                        "component": "text",
                        "value": "Please run this second <span style=\"\">code</span> on the <span style=\"\">Terminal</span> and see what happens there?"
                    },
                    {
                        "component": "code",
                        "type": "python",
                        "title": "",
                        "value": "print (\"This, another line will also be printed in python\")"
                    },
                    {
                        "component": "text",
                        "value": "Now run this line separately on the  <span style=\"\">Terminal</span> and see what happens there?"
                    },
                    {
                        "component": "code",
                        "type": "python",
                        "title": "",
                        "value": "print (2 + 5)"
                    },
                    {
                        "component": "text",
                        "value": "Now copy-paste this <span style=\"\">code</span> together on the  <span style=\"\">Terminal</span> and see what happens there?"
                    },
                    {
                        "component": "code",
                        "type": "python",
                        "title": "",
                        "value": "print (\"This line will be printed in python.\")<br>print (\"This, another line will also be printed in python\")<br>print (2 + 5)"
                    },
                    {
                        "component": "text",
                        "value": "What is happening in this line, you will be able to understand later? But run this <span style=\"\">code</span> and try to understand."
                    },
                    {
                        "component": "code",
                        "type": "python",
                        "title": "",
                        "value": "i = 0<br>print (i)"
                    },
                    {
                        "component": "text",
                        "value": "Copy-paste this on <span style=\"\">Terminal</span> and to stop this press  <span style=\"color: #eb9371; background-color: rgba(39, 41, 43, 0.83); box-shadow: 2px 2px 2px rgba(22, 9, 1, 0.6); border-radius: 2px; padding: 2px\">Ctrl + C</span>  together on the <span style=\"\">Terminal</span>."
                    },
                    {
                        "component": "code",
                        "type": "python",
                        "title": "",
                        "value": "i = 0<br>while i < 100:<br>    print (\"I will be printed again and again.:)\""
                    },
                    {
                        "component": "text",
                        "value": "Now run this <span style=\"\">code</span> and try to identify the difference between the <span style=\"\">code</span> given above and below."
                    },
                    {
                        "component": "code",
                        "type": "python",
                        "title": "",
                        "value": "i = 0<br>while i < 100:<br>    print (\"I will be printed again and again:)\")<br>    i = i+1"
                    },
                    {
                        "component": "text",
                        "value": "Now run this <span style=\"\">code</span> together and to stop this <span style=\"\">code</span> what will you do?"
                    },
                    {
                        "component": "code",
                        "type": "python",
                        "title": "",
                        "value": "print (\"This line will be printed in python.\")<br>print (\"This, another line will also be printed in python\")<br>print (2 + 5)<br>i = 0<br>print (i)<br>while i < 100:<br>    print (\"I will be printed again and again.:)\")"
                    },
                    {
                        "component": "text",
                        "value": "Now think that what will you do to stop the <span style=\"\">code</span> given above?"
                    },
                    {
                        "component": "text",
                        "value": "Similarly, in this way, only <span style=\"\">codes</span> will be written in the whole course. You will be required to run the <span style=\"\">code</span> this way only. To run this <span style=\"\">code</span> you need to open an <span style=\"\">application</span> named <span style=\"color: #eb9371; background-color: rgba(39, 41, 43, 0.83); box-shadow: 2px 2px 2px rgba(22, 9, 1, 0.6); border-radius: 2px; padding: 2px\">Terminal</span> on your laptop. After opening it, you need to type the <span style=\"\">python</span> <span style=\"\">code</span> and then run it."
                    },
                    {
                        "component": "header",
                        "variant": 2,
                        "value": "Very Important Rules"
                    },
                    {
                        "component": "text",
                        "value": "Execute each example on <b>python shell</b>. If you are not doing this you are making a fool of yourself.",
                        "decoration": {
                            "type": "bullet"
                        }
                    },
                    {
                        "component": "text",
                        "value": "By copy-pasting the code, you will not be able to understand it properly. You should write each code by yourself and then run it.",
                        "decoration": {
                            "type": "bullet"
                        }
                    },
                    {
                        "component": "text",
                        "value": "Words written in <span style=\"color: #eb9371; background-color: rgba(39, 41, 43, 0.83); box-shadow: 2px 2px 2px rgba(22, 9, 1, 0.6); border-radius: 2px; padding: 2px\">UPPER CASE</span> or <b>bold letters</b> are very important. Learn them, you will come across them many times.",
                        "decoration": {
                            "type": "bullet"
                        }
                    },
                    {
                        "component": "text",
                        "value": "During the course you need to answer some questions at many places. To give answers you can upload the file.",
                        "decoration": {
                            "type": "bullet"
                        }
                    }
                ]
            },
            {
                "id": "6529",
                "parent_exercise_id": null,
                "course_id": "191",
                "name": "why",
                "slug": "introduction-of-python_json__why_json",
                "sequence_num": 100,
                "review_type": "manual",
                "submission_type": null,
                "github_link": "https://github.com/navgurukul/newton/tree/master/introduction-of-python_json/why.json",
                "solution": null,
                "content": [
                    {
                        "component": "text",
                        "value": "<a href=\"https://www.youtube.com/watch?v=UlpurGz1-TU&t=9s\">Introduction of Python in English<br></a>"
                    },
                    {
                        "component": "text",
                        "value": "<a href=\"https://www.youtube.com/watch?v=iWNpVTYSt74\">Introduction of Python in Hindi<br></a>"
                    },
                    {
                        "component": "header",
                        "variant": 3,
                        "value": "Difference Between <span style=\"\">Python2</span> and <span style=\"\">Python3</span>"
                    },
                    {
                        "component": "text",
                        "value": "<b><span style=\"\">Python2</span></b>"
                    },
                    {
                        "component": "code",
                        "type": "python",
                        "title": "",
                        "value": "Print \"Hello World\""
                    },
                    {
                        "component": "text",
                        "value": "This is old version of python .",
                        "decoration": {
                            "type": "number",
                            "value": 1
                        }
                    },
                    {
                        "component": "text",
                        "value": "Python2 has one print statement.",
                        "decoration": {
                            "type": "number",
                            "value": 2
                        }
                    },
                    {
                        "component": "text",
                        "value": "In Python2 while printing we write like this ,<br><br><br>",
                        "decoration": {
                            "type": "number",
                            "value": 3
                        }
                    },
                    {
                        "component": "text",
                        "value": "In Python2 we use raw_input ka use for user input.<br><br>",
                        "decoration": {
                            "type": "number",
                            "value": 4
                        }
                    },
                    {
                        "component": "code",
                        "type": "python",
                        "title": "",
                        "value": "age= int(raw_input(\"enter your age\"))"
                    },
                    {
                        "component": "text",
                        "value": "Python2 has 31 keywords .<br><br><br><br>",
                        "decoration": {
                            "type": "number",
                            "value": 5
                        }
                    },
                    {
                        "component": "text",
                        "value": "<b><span style=\"\">Python3</span></b>"
                    },
                    {
                        "component": "text",
                        "value": "This is the new version of python .",
                        "decoration": {
                            "type": "number",
                            "value": 1
                        }
                    },
                    {
                        "component": "text",
                        "value": "Python3 has one print() .",
                        "decoration": {
                            "type": "number",
                            "value": 2
                        }
                    },
                    {
                        "component": "header",
                        "variant": 4,
                        "value": "In Python3 me while  printing  we use parentheses () ."
                    },
                    {
                        "component": "code",
                        "type": "python",
                        "title": "",
                        "value": "print(\"Hello World\")"
                    },
                    {
                        "component": "header",
                        "variant": 4,
                        "value": "In Python3 we use input for user's input ."
                    },
                    {
                        "component": "code",
                        "type": "python",
                        "title": "",
                        "value": "age=int(input(\"please enter your age\"))"
                    },
                    {
                        "component": "text",
                        "value": "Python3 has 35 keywords .",
                        "decoration": {
                            "type": "number",
                            "value": 5
                        }
                    }
                ]
            },
            {
                "id": "6528",
                "parent_exercise_id": null,
                "course_id": "191",
                "name": "indentation",
                "slug": "introduction-of-python_json__indentation_json",
                "sequence_num": 200,
                "review_type": "manual",
                "submission_type": null,
                "github_link": "https://github.com/navgurukul/newton/tree/master/introduction-of-python_json/indentation.json",
                "solution": null,
                "content": [
                    {
                        "component": "header",
                        "variant": 2,
                        "value": "What is <span style=\"color: #eb9371; background-color: rgba(39, 41, 43, 0.83); box-shadow: 2px 2px 2px rgba(22, 9, 1, 0.6); border-radius: 2px; padding: 2px\">Indentation</span>?"
                    },
                    {
                        "component": "text",
                        "value": "Please have a look at the <span style=\"\">code</span> given below. Now think about the <span style=\"\">output</span> of this <span style=\"\">code</span> without running."
                    },
                    {
                        "component": "code",
                        "type": "python",
                        "title": "",
                        "value": "a = 10<br>if a * 2 == 20:<br>print (\"Variable a when multiplied by 2 gives 20.\")<br>else:<br>print (\"Variable a when multiplied by 2 does not give 20.\")"
                    },
                    {
                        "component": "text",
                        "value": "What answer did you think? Please copy-paste this <span style=\"\">code</span>, <span style=\"\">save</span> this in a <span style=\"\">file</span> and run this <span style=\"\">code</span>. You will notice that this <span style=\"\">code</span> will not print any <span style=\"\">output</span>, but gives an <span style=\"color: #eb9371; background-color: rgba(39, 41, 43, 0.83); box-shadow: 2px 2px 2px rgba(22, 9, 1, 0.6); border-radius: 2px; padding: 2px\">error</span>. To understand this <span style=\"\">error</span> we need to think from the point of view of <span style=\"\">python</span>. <span style=\"\">Python</span> will run this program as follows:-"
                    },
                    {
                        "component": "text",
                        "value": "In the first line it will put the value <span style=\"color: #eb9371; background-color: rgba(39, 41, 43, 0.83); box-shadow: 2px 2px 2px rgba(22, 9, 1, 0.6); border-radius: 2px; padding: 2px\">10</span> in \"a\".",
                        "decoration": {
                            "type": "number",
                            "value": 1
                        }
                    },
                    {
                        "component": "text",
                        "value": "In the second line python will check that whether multiplying <b>a</b> by <span style=\"color: #eb9371; background-color: rgba(39, 41, 43, 0.83); box-shadow: 2px 2px 2px rgba(22, 9, 1, 0.6); border-radius: 2px; padding: 2px\">2</span> gives a result equal to 20 or not.",
                        "decoration": {
                            "type": "number",
                            "value": 2
                        }
                    },
                    {
                        "component": "text",
                        "value": "Till the third line python will be able to know that on multiplying <b>a</b> <span style=\"color: #eb9371; background-color: rgba(39, 41, 43, 0.83); box-shadow: 2px 2px 2px rgba(22, 9, 1, 0.6); border-radius: 2px; padding: 2px\">2</span> by we will get <span style=\"color: #eb9371; background-color: rgba(39, 41, 43, 0.83); box-shadow: 2px 2px 2px rgba(22, 9, 1, 0.6); border-radius: 2px; padding: 2px\">20</span>. But python gets confused at this place, it does not understand that whether it should only print  \"Variable a when multiplied by 2 gives 20.\" or it needs to run the code given below also or not. Humans can easily understand this, but the computer gets mad and gives errors.<br><br>",
                        "decoration": {
                            "type": "number",
                            "value": 3
                        }
                    },
                    {
                        "component": "text",
                        "value": "We will write this program correctly as follows,"
                    },
                    {
                        "component": "code",
                        "type": "python",
                        "title": "",
                        "value": "a = 10<br>if a * 2 == 20:<br>    print ( )<br>else:<br>    print (\"Variable a when multiplied by 2 does not give 20.\")"
                    },
                    {
                        "component": "text",
                        "value": "When <span style=\"\">python</span> will run this correct <span style=\"\">code</span>, then its brain will work like this. "
                    },
                    {
                        "component": "text",
                        "value": "In the first line it will put the value <span style=\"color: #eb9371; background-color: rgba(39, 41, 43, 0.83); box-shadow: 2px 2px 2px rgba(22, 9, 1, 0.6); border-radius: 2px; padding: 2px\">10</span> in \"a\".",
                        "decoration": {
                            "type": "number",
                            "value": 1
                        }
                    },
                    {
                        "component": "text",
                        "value": "In the second line python will check that whether multiplying <b>a</b> by <span style=\"color: #eb9371; background-color: rgba(39, 41, 43, 0.83); box-shadow: 2px 2px 2px rgba(22, 9, 1, 0.6); border-radius: 2px; padding: 2px\">2</span> gives a result equal to 20 or not.",
                        "decoration": {
                            "type": "number",
                            "value": 2
                        }
                    },
                    {
                        "component": "text",
                        "value": "In the third line , python will print \"Variable a when multiplied by 2 gives 20\". Now, you will think that python prints this line in this code then why it did not print in the previous example. But, see a little care that the third line has started after some space. These <span style=\"color: #eb9371; background-color: rgba(39, 41, 43, 0.83); box-shadow: 2px 2px 2px rgba(22, 9, 1, 0.6); border-radius: 2px; padding: 2px\">spaces</span> are called <span style=\"color: #eb9371; background-color: rgba(39, 41, 43, 0.83); box-shadow: 2px 2px 2px rgba(22, 9, 1, 0.6); border-radius: 2px; padding: 2px\">indent</span> in python. Now, python understands that on multiplying  <b>a</b> by <span style=\"color: #eb9371; background-color: rgba(39, 41, 43, 0.83); box-shadow: 2px 2px 2px rgba(22, 9, 1, 0.6); border-radius: 2px; padding: 2px\">2</span> we get <span style=\"color: #eb9371; background-color: rgba(39, 41, 43, 0.83); box-shadow: 2px 2px 2px rgba(22, 9, 1, 0.6); border-radius: 2px; padding: 2px\">20</span>, if this condition is <span style=\"color: #eb9371; background-color: rgba(39, 41, 43, 0.83); box-shadow: 2px 2px 2px rgba(22, 9, 1, 0.6); border-radius: 2px; padding: 2px\">True</span>, then we will run the lines which are <span style=\"color: #eb9371; background-color: rgba(39, 41, 43, 0.83); box-shadow: 2px 2px 2px rgba(22, 9, 1, 0.6); border-radius: 2px; padding: 2px\">indented</span> below <b>if</b>.",
                        "decoration": {
                            "type": "number",
                            "value": 3
                        }
                    },
                    {
                        "component": "text",
                        "value": "In the 4th line python finds something else but it does not run else part because if the part already ran. So, how to use <span style=\"color: #eb9371; background-color: rgba(39, 41, 43, 0.83); box-shadow: 2px 2px 2px rgba(22, 9, 1, 0.6); border-radius: 2px; padding: 2px\">if statement</span>, try to learn about this.<br><br>",
                        "decoration": {
                            "type": "number",
                            "value": 4
                        }
                    },
                    {
                        "component": "text",
                        "value": "This spacing in <span style=\"\">python</span> is called <span style=\"color: #eb9371; background-color: rgba(39, 41, 43, 0.83); box-shadow: 2px 2px 2px rgba(22, 9, 1, 0.6); border-radius: 2px; padding: 2px\">indentation</span>. Whenever there is a problem related to <span style=\"color: #eb9371; background-color: rgba(39, 41, 43, 0.83); box-shadow: 2px 2px 2px rgba(22, 9, 1, 0.6); border-radius: 2px; padding: 2px\">indentation</span>, <span style=\"\">Python</span> calls it an <span style=\"color: #eb9371; background-color: rgba(39, 41, 43, 0.83); box-shadow: 2px 2px 2px rgba(22, 9, 1, 0.6); border-radius: 2px; padding: 2px\">Indentation Error</span> This <span style=\"\">error</span> looks like this:-"
                    },
                    {
                        "component": "code",
                        "type": "python",
                        "title": "",
                        "value": "File \"<ipython-input-5-9eaf99c4383b>\", line 3<br>    print (\"a variable ko 2 se multiply kar ke 20 aata hai\")<br>        ^<br>IndentationError: expected an indented block"
                    },
                    {
                        "component": "header",
                        "variant": 3,
                        "value": "One more example"
                    },
                    {
                        "component": "text",
                        "value": "We will take more examples and understand them clearly. First, run the <span style=\"\">code</span> given below. After that read the text given below."
                    },
                    {
                        "component": "header",
                        "variant": 4,
                        "value": "Example :-"
                    },
                    {
                        "component": "code",
                        "type": "python",
                        "title": "",
                        "value": "counter = 1<br>while counter < 10:<br>    print (\"The counter is\" + str(counter))<br>    counter = counter + 1<br>    print ('--------')"
                    },
                    {
                        "component": "text",
                        "value": "In this program, in the last 3 lines <span style=\"color: #eb9371; background-color: rgba(39, 41, 43, 0.83); box-shadow: 2px 2px 2px rgba(22, 9, 1, 0.6); border-radius: 2px; padding: 2px\">(\u2018print \"The counter is\" + str(counter)\u2019, \u2018counter = counter + 1\u2019, \u2018print \"--------\"\u2019)</span> if there is no <span style=\"\">indentation</span> then <span style=\"\">python</span> will not be able to understand that after <span style=\"color: #eb9371; background-color: rgba(39, 41, 43, 0.83); box-shadow: 2px 2px 2px rgba(22, 9, 1, 0.6); border-radius: 2px; padding: 2px\">while loop</span> what it has to run? <span style=\"\">Python</span> will get confused and will give an <span style=\"\">error</span>. To <span style=\"color: #eb9371; background-color: rgba(39, 41, 43, 0.83); box-shadow: 2px 2px 2px rgba(22, 9, 1, 0.6); border-radius: 2px; padding: 2px\">indent</span> a <span style=\"\">python</span> <span style=\"\">code</span> is very important. If you see the program, you will realize that the <span style=\"\">code</span> is divided into different parts:-"
                    },
                    {
                        "component": "text",
                        "value": "In the first part, the <span style=\"color: #eb9371; background-color: rgba(39, 41, 43, 0.83); box-shadow: 2px 2px 2px rgba(22, 9, 1, 0.6); border-radius: 2px; padding: 2px\">counter</span> variable is defined and we write the line <span style=\"color: #eb9371; background-color: rgba(39, 41, 43, 0.83); box-shadow: 2px 2px 2px rgba(22, 9, 1, 0.6); border-radius: 2px; padding: 2px\">while countering &lt; 10</span>.",
                        "decoration": {
                            "type": "number",
                            "value": 1
                        }
                    },
                    {
                        "component": "text",
                        "value": "In the second part, we have written that code which will run after for <span style=\"color: #eb9371; background-color: rgba(39, 41, 43, 0.83); box-shadow: 2px 2px 2px rgba(22, 9, 1, 0.6); border-radius: 2px; padding: 2px\">loop</span> again and again till the for <span style=\"color: #eb9371; background-color: rgba(39, 41, 43, 0.83); box-shadow: 2px 2px 2px rgba(22, 9, 1, 0.6); border-radius: 2px; padding: 2px\">loop</span> is running. <br>The different parts of code are called code blocks and in python to indent these blocks we use a tab. <br>To understand this, save the given code in a new file and see what output comes and how that output is different from the output of the code given above. After this discussion about what happened?<br><br>",
                        "decoration": {
                            "type": "number",
                            "value": 2
                        }
                    },
                    {
                        "component": "header",
                        "variant": 4,
                        "value": "Example:-"
                    },
                    {
                        "component": "code",
                        "type": "python",
                        "title": "",
                        "value": "counter = 1<br>while counter < 10:<br>    print (\"The counter is\" + str(counter))<br>    counter = counter + 1<br>print ('--------')"
                    },
                    {
                        "component": "header",
                        "variant": 4,
                        "value": "Note :-"
                    },
                    {
                        "component": "text",
                        "value": "Whenever you write the <span style=\"\">code</span>, then your <span style=\"\">editor</span> should <span style=\"color: #eb9371; background-color: rgba(39, 41, 43, 0.83); box-shadow: 2px 2px 2px rgba(22, 9, 1, 0.6); border-radius: 2px; padding: 2px\">indent</span> the <span style=\"\">code</span>, but if it does not do that, then you can use the <span style=\"\">Tab</span> <span style=\"\">key</span> for <span style=\"color: #eb9371; background-color: rgba(39, 41, 43, 0.83); box-shadow: 2px 2px 2px rgba(22, 9, 1, 0.6); border-radius: 2px; padding: 2px\">indenting</span>."
                    },
                    {
                        "component": "header",
                        "variant": 4,
                        "value": "Note :-"
                    },
                    {
                        "component": "text",
                        "value": "You can also use the Space <span style=\"\">key</span> for <span style=\"color: #eb9371; background-color: rgba(39, 41, 43, 0.83); box-shadow: 2px 2px 2px rgba(22, 9, 1, 0.6); border-radius: 2px; padding: 2px\">indentation</span>. <span style=\"color: #eb9371; background-color: rgba(39, 41, 43, 0.83); box-shadow: 2px 2px 2px rgba(22, 9, 1, 0.6); border-radius: 2px; padding: 2px\">Space key</span>  is difficult to use, as many <span style=\"\">errors</span> occur due to its use, just because of this many <span style=\"\">errors</span> occur, that is why many Developers(Software Engineer) use <span style=\"\">Tab</span> so that minor <span style=\"\">errors</span> do not occur."
                    },
                    {
                        "component": "header",
                        "variant": 3,
                        "value": "Multiple Levels of <span style=\"color: #eb9371; background-color: rgba(39, 41, 43, 0.83); box-shadow: 2px 2px 2px rgba(22, 9, 1, 0.6); border-radius: 2px; padding: 2px\">Indentation</span>"
                    },
                    {
                        "component": "text",
                        "value": "In a given <span style=\"color: #eb9371; background-color: rgba(39, 41, 43, 0.83); box-shadow: 2px 2px 2px rgba(22, 9, 1, 0.6); border-radius: 2px; padding: 2px\">indented code block</span> there can be another indented <span style=\"\">code</span> block. Study this <span style=\"\">code</span> and understand and tell how the <span style=\"\">output</span> comes? Try to run this <span style=\"\">code</span> and see if you thought correctly about the <span style=\"\">output</span> or not. If not then use your brain to think about it more."
                    },
                    {
                        "component": "code",
                        "type": "python",
                        "title": "",
                        "value": "counter = 1<br>while counter < 10:<br>    if counter % 2 == 0:<br>        print (\"Counter is an even number.\")<br>    print (\"The counter is\" + str(counter))<br>    counter = counter + 1<br>print ('--------')"
                    },
                    {
                        "component": "text",
                        "value": "Please see here that in this <span style=\"\">code</span>,  2 levels of indented <span style=\"\">code</span> blocks exist.  "
                    },
                    {
                        "component": "text",
                        "value": "After the first level <span style=\"color: #eb9371; background-color: rgba(39, 41, 43, 0.83); box-shadow: 2px 2px 2px rgba(22, 9, 1, 0.6); border-radius: 2px; padding: 2px\">if counter % 2 == 0\u2019 is present.</span>",
                        "decoration": {
                            "type": "number",
                            "value": 1
                        }
                    },
                    {
                        "component": "text",
                        "value": "In the second level <span style=\"color: #eb9371; background-color: rgba(39, 41, 43, 0.83); box-shadow: 2px 2px 2px rgba(22, 9, 1, 0.6); border-radius: 2px; padding: 2px\">print (\"Counter is an even number.\")</span> is present.<br><br>",
                        "decoration": {
                            "type": "number",
                            "value": 2
                        }
                    },
                    {
                        "component": "text",
                        "value": "Here, <span style=\"\">python</span> will run if under while <span style=\"\">loop</span>  and <span style=\"color: #eb9371; background-color: rgba(39, 41, 43, 0.83); box-shadow: 2px 2px 2px rgba(22, 9, 1, 0.6); border-radius: 2px; padding: 2px\">print (\"Counter is an even number.\")</span>only when inside the <span style=\"\">loop</span> <span style=\"color: #eb9371; background-color: rgba(39, 41, 43, 0.83); box-shadow: 2px 2px 2px rgba(22, 9, 1, 0.6); border-radius: 2px; padding: 2px\">counter</span> value is an even number."
                    }
                ]
            },
            {
                "id": "6530",
                "parent_exercise_id": null,
                "course_id": "191",
                "name": "basics-booleans",
                "slug": "introduction-of-python_json__basics-booleans_json",
                "sequence_num": 300,
                "review_type": "manual",
                "submission_type": null,
                "github_link": "https://github.com/navgurukul/newton/tree/master/introduction-of-python_json/basics-booleans.json",
                "solution": null,
                "content": [
                    {
                        "component": "header",
                        "variant": 2,
                        "value": "What are Booleans ?"
                    },
                    {
                        "component": "text",
                        "value": "<span style=\"color: #eb9371; background-color: rgba(39, 41, 43, 0.83); box-shadow: 2px 2px 2px rgba(22, 9, 1, 0.6); border-radius: 2px; padding: 2px\">Booleans</span> are  special type of constants, (till now we have studied about <span style=\"color: #eb9371; background-color: rgba(39, 41, 43, 0.83); box-shadow: 2px 2px 2px rgba(22, 9, 1, 0.6); border-radius: 2px; padding: 2px\">Strings</span>, <span style=\"color: #eb9371; background-color: rgba(39, 41, 43, 0.83); box-shadow: 2px 2px 2px rgba(22, 9, 1, 0.6); border-radius: 2px; padding: 2px\">Integers</span> and <span style=\"color: #eb9371; background-color: rgba(39, 41, 43, 0.83); box-shadow: 2px 2px 2px rgba(22, 9, 1, 0.6); border-radius: 2px; padding: 2px\">Floats</span> )."
                    },
                    {
                        "component": "text",
                        "value": "Boolean values are of two types:"
                    },
                    {
                        "component": "text",
                        "value": "<span style=\"color: #eb9371; background-color: rgba(39, 41, 43, 0.83); box-shadow: 2px 2px 2px rgba(22, 9, 1, 0.6); border-radius: 2px; padding: 2px\">True</span> ",
                        "decoration": {
                            "type": "number",
                            "value": 1
                        }
                    },
                    {
                        "component": "text",
                        "value": "<span style=\"color: #eb9371; background-color: rgba(39, 41, 43, 0.83); box-shadow: 2px 2px 2px rgba(22, 9, 1, 0.6); border-radius: 2px; padding: 2px\">False</span><br><br>",
                        "decoration": {
                            "type": "number",
                            "value": 2
                        }
                    },
                    {
                        "component": "text",
                        "value": "These <span style=\"color: #eb9371; background-color: rgba(39, 41, 43, 0.83); box-shadow: 2px 2px 2px rgba(22, 9, 1, 0.6); border-radius: 2px; padding: 2px\">Boolean</span> values help us in doing some interesting things. We can use them to do some really interesting work."
                    },
                    {
                        "component": "text",
                        "value": "If any <span style=\"\">variable</span> is <span style=\"color: #eb9371; background-color: rgba(39, 41, 43, 0.83); box-shadow: 2px 2px 2px rgba(22, 9, 1, 0.6); border-radius: 2px; padding: 2px\">True</span> then we tell the computer to do something and if it is <span style=\"color: #eb9371; background-color: rgba(39, 41, 43, 0.83); box-shadow: 2px 2px 2px rgba(22, 9, 1, 0.6); border-radius: 2px; padding: 2px\">False</span> then we tell the computer to do something else."
                    },
                    {
                        "component": "text",
                        "value": "As of know this much understanding is enough but we will study it in depth further :)"
                    },
                    {
                        "component": "header",
                        "variant": 3,
                        "value": "<span style=\"\">Operators</span> that give Boolean answers."
                    },
                    {
                        "component": "text",
                        "value": "Whenever we ask any question to computer then we use some special type of <span style=\"\">operators</span> to ask these questions. These <span style=\"\">operators</span> always give answers in Boolean form i.e. either <span style=\"color: #eb9371; background-color: rgba(39, 41, 43, 0.83); box-shadow: 2px 2px 2px rgba(22, 9, 1, 0.6); border-radius: 2px; padding: 2px\">True or False</span>. All the <span style=\"\">operators</span> are listed in the <span style=\"\">tab</span>le given below."
                    },
                    {
                        "component": "table",
                        "value": [
                            {
                                "header": "<b>`Operator</b>",
                                "items": [
                                    "<span style=\"color: #eb9371; background-color: rgba(39, 41, 43, 0.83); box-shadow: 2px 2px 2px rgba(22, 9, 1, 0.6); border-radius: 2px; padding: 2px\">&lt;</span>",
                                    "<span style=\"color: #eb9371; background-color: rgba(39, 41, 43, 0.83); box-shadow: 2px 2px 2px rgba(22, 9, 1, 0.6); border-radius: 2px; padding: 2px\">&lt;=</span>",
                                    "<span style=\"color: #eb9371; background-color: rgba(39, 41, 43, 0.83); box-shadow: 2px 2px 2px rgba(22, 9, 1, 0.6); border-radius: 2px; padding: 2px\">==</span>",
                                    "<span style=\"color: #eb9371; background-color: rgba(39, 41, 43, 0.83); box-shadow: 2px 2px 2px rgba(22, 9, 1, 0.6); border-radius: 2px; padding: 2px\">&gt;=</span>",
                                    "<span style=\"color: #eb9371; background-color: rgba(39, 41, 43, 0.83); box-shadow: 2px 2px 2px rgba(22, 9, 1, 0.6); border-radius: 2px; padding: 2px\">&gt;</span>",
                                    "<span style=\"color: #eb9371; background-color: rgba(39, 41, 43, 0.83); box-shadow: 2px 2px 2px rgba(22, 9, 1, 0.6); border-radius: 2px; padding: 2px\">!=</span>"
                                ]
                            },
                            {
                                "header": "<b>Meaning</b>",
                                "items": [
                                    "Which is lesser?",
                                    "Which is less than equal to?",
                                    "Which is equal?",
                                    "Which is greater than equal to?",
                                    "Which is greater?",
                                    "Which is not equal to?"
                                ]
                            },
                            {
                                "header": "<b>Example</b>",
                                "items": [
                                    "<span style=\"color: #eb9371; background-color: rgba(39, 41, 43, 0.83); box-shadow: 2px 2px 2px rgba(22, 9, 1, 0.6); border-radius: 2px; padding: 2px\">7 &lt; 6</span> # False Why because 7 is greater than 6<br> <span style=\"color: #eb9371; background-color: rgba(39, 41, 43, 0.83); box-shadow: 2px 2px 2px rgba(22, 9, 1, 0.6); border-radius: 2px; padding: 2px\">6 &lt; 10</span> # True Because  6  is less than 10",
                                    "<span style=\"color: #eb9371; background-color: rgba(39, 41, 43, 0.83); box-shadow: 2px 2px 2px rgba(22, 9, 1, 0.6); border-radius: 2px; padding: 2px\">7 &lt;= 10</span> #True because 7 is less than 10 <br> <span style=\"color: #eb9371; background-color: rgba(39, 41, 43, 0.83); box-shadow: 2px 2px 2px rgba(22, 9, 1, 0.6); border-radius: 2px; padding: 2px\">23 &lt;= 23</span> # True because 23 is equal to 23",
                                    "<span style=\"color: #eb9371; background-color: rgba(39, 41, 43, 0.83); box-shadow: 2px 2px 2px rgba(22, 9, 1, 0.6); border-radius: 2px; padding: 2px\">varx = 10</span> <br> <span style=\"color: #eb9371; background-color: rgba(39, 41, 43, 0.83); box-shadow: 2px 2px 2px rgba(22, 9, 1, 0.6); border-radius: 2px; padding: 2px\">varx == 10</span> # True because varx is equal to 10 <br> <span style=\"color: #eb9371; background-color: rgba(39, 41, 43, 0.83); box-shadow: 2px 2px 2px rgba(22, 9, 1, 0.6); border-radius: 2px; padding: 2px\">67 == 43</span> # False because 67 is not equal to 43",
                                    "<span style=\"color: #eb9371; background-color: rgba(39, 41, 43, 0.83); box-shadow: 2px 2px 2px rgba(22, 9, 1, 0.6); border-radius: 2px; padding: 2px\">56 &gt;= 32</span> # True Because 56 is greater than 32  <br> <span style=\"color: #eb9371; background-color: rgba(39, 41, 43, 0.83); box-shadow: 2px 2px 2px rgba(22, 9, 1, 0.6); border-radius: 2px; padding: 2px\">43 &gt;= 70</span> # False because 43 is neither greater nor equal to 70 .",
                                    "<span style=\"color: #eb9371; background-color: rgba(39, 41, 43, 0.83); box-shadow: 2px 2px 2px rgba(22, 9, 1, 0.6); border-radius: 2px; padding: 2px\">number1 = 43</span> <br> <span style=\"color: #eb9371; background-color: rgba(39, 41, 43, 0.83); box-shadow: 2px 2px 2px rgba(22, 9, 1, 0.6); border-radius: 2px; padding: 2px\">number1 &gt; 20</span> # True because number1 contains value 43 which is greater than 20 .",
                                    "<span style=\"color: #eb9371; background-color: rgba(39, 41, 43, 0.83); box-shadow: 2px 2px 2px rgba(22, 9, 1, 0.6); border-radius: 2px; padding: 2px\">45 != 45</span> # False because 45 is equal to 45 <br> <span style=\"color: #eb9371; background-color: rgba(39, 41, 43, 0.83); box-shadow: 2px 2px 2px rgba(22, 9, 1, 0.6); border-radius: 2px; padding: 2px\">45 != 34</span> # True because 45 is not equal to 34."
                                ]
                            }
                        ]
                    },
                    {
                        "component": "text",
                        "value": "Play with all these <span style=\"\">operators</span> in <span style=\"\">Python</span> <span style=\"\">shell</span>. You will gain a better understanding."
                    },
                    {
                        "component": "code",
                        "type": "python",
                        "title": "",
                        "value": "4 < 5 # True"
                    },
                    {
                        "component": "code",
                        "type": "python",
                        "title": "",
                        "value": "56 == 45 # False"
                    },
                    {
                        "component": "text",
                        "value": "If you will use these <span style=\"\">operators</span> in <span style=\"color: #eb9371; background-color: rgba(39, 41, 43, 0.83); box-shadow: 2px 2px 2px rgba(22, 9, 1, 0.6); border-radius: 2px; padding: 2px\">Python shell</span> then it will automatically show its Boolean answer."
                    }
                ]
            },
            {
                "id": "6531",
                "parent_exercise_id": null,
                "course_id": "191",
                "name": "WhatDoComputersDo",
                "slug": "introduction-of-python_json__WhatDoComputersDo_json",
                "sequence_num": 500,
                "review_type": "manual",
                "submission_type": null,
                "github_link": "https://github.com/navgurukul/newton/tree/master/introduction-of-python_json/WhatDoComputersDo.json",
                "solution": null,
                "content": [
                    {
                        "component": "header",
                        "variant": 2,
                        "value": "What Do Computers Do?"
                    },
                    {
                        "component": "text",
                        "value": "In our human history, there have been some great inventions that have brought progress in the lives of humans and have also provided direction to it. Ex:<b>WHEEL</b>"
                    },
                    {
                        "component": "text",
                        "value": "Humans were not able to lift or carry heavy loads to longer distances. This was due to human physical limitations.<br>By the invention of WHEEL, humans were able to carry very heavy loads as well as to travel long distances also.<br>The world became smaller to us. Hence, the invention of WHEEL solved lots of problems. Now, we can even meet our relatives staying far off and transportation of goods also became easier."
                    },
                    {
                        "component": "text",
                        "value": "Another great invention that brought a drastic change in human history-<b>COMPUTER</b>."
                    },
                    {
                        "component": "text",
                        "value": "Just as WHEELS removed our physical limitations, similarly COMPUTERS helped in expanding our brain capacity or mental limitations."
                    },
                    {
                        "component": "text",
                        "value": "The human brain can solve many complex tasks/problems. But if our brain continuously solves these complex problems, our brain will start getting tired or bored. Our brain will start making mistakes and it becomes difficult for us to solve the problem."
                    },
                    {
                        "component": "text",
                        "value": "Just as wheels removed our physical limitations, the invention of computers, helped in removing our mental limitations. By giving instructions to the Computer, we can make them perform complex tasks, continuously without making any mistakes and without getting tired."
                    },
                    {
                        "component": "text",
                        "value": "Computers don\u2019t have their brain so they can\u2019t think, we have to give instructions to them to make them solve any complex problem."
                    },
                    {
                        "component": "text",
                        "value": "<b>Read and search the following questions.</b><br>--   What did you learn about computers?<br>--   What are the <span style=\"\">applications</span> of computers? What kinds of problems do these <span style=\"\">applications</span> solve? Think about what kind of instructions were given to computers for these <span style=\"\">applications</span>?"
                    }
                ]
            },
            {
                "id": "6534",
                "parent_exercise_id": null,
                "course_id": "191",
                "name": "WhatIsProgramming",
                "slug": "introduction-of-python_json__WhatIsProgramming_json",
                "sequence_num": 600,
                "review_type": "manual",
                "submission_type": null,
                "github_link": "https://github.com/navgurukul/newton/tree/master/introduction-of-python_json/WhatIsProgramming.json",
                "solution": null,
                "content": [
                    {
                        "component": "text",
                        "value": "By giving <b>instructions</b> to the computer,we can make the computers solve complex problems."
                    },
                    {
                        "component": "text",
                        "value": "A set of <b>instructions</b> given to the computer is called a <b>program</b>.<br>The Process of giving instructions to the computer is called <b>programming</b>."
                    },
                    {
                        "component": "text",
                        "value": "Doesn't it sound simple that we give instructions(program) to the computer and the computer follows these instructions to solve a complex problem? Giving instructions to the computer is called programming. :)"
                    },
                    {
                        "component": "text",
                        "value": "But there is a small problem."
                    },
                    {
                        "component": "text",
                        "value": "Computers cannot understand our language like (Hindi, Tamil,  Kannada). Computers can only understand the machine language which is made of 0 and 1. So, it becomes difficult for us to communicate with the computer in machine language."
                    },
                    {
                        "component": "text",
                        "value": "Then how can we give instructions to the computer?"
                    },
                    {
                        "component": "text",
                        "value": "Therefore, to solve this problem we made some languages like(Java, <span style=\"\">Python</span>, JavaScript) so that we can easily give instructions to the computer. Computers can easily convert these languages into machine language with the help of \u201canother program called a <span style=\"\">compiler</span>.\u201d"
                    },
                    {
                        "component": "text",
                        "value": "To give instructions to the computer we need to learn any of these given languages. In this course, we are going to learn the <span style=\"\">python</span> language."
                    },
                    {
                        "component": "text",
                        "value": "We will use <span style=\"\">python</span> language to give instructions to the computer."
                    },
                    {
                        "component": "text",
                        "value": "<b>Assignment</b>"
                    },
                    {
                        "component": "text",
                        "value": "Have you ever given instructions to anybody or taken instructions from anybody. Can we call that a <b>program</b>?",
                        "decoration": {
                            "type": "bullet"
                        }
                    },
                    {
                        "component": "text",
                        "value": "Search for Python language and its applications? How many people in the world use Java?",
                        "decoration": {
                            "type": "bullet"
                        }
                    }
                ]
            },
            {
                "id": "5317",
                "parent_exercise_id": "5317",
                "course_id": "191",
                "name": "Introduction",
                "slug": "introduction-of-python_json__basic-definitions/Introduction_json",
                "sequence_num": 700,
                "review_type": "manual",
                "submission_type": null,
                "github_link": "https://github.com/navgurukul/newton/tree/master/introduction-of-python_json/basic-definitions/Introduction.json",
                "solution": null,
                "content": [
                    {
                        "component": "text",
                        "value": "<b>Introduction of <span style=\"\">Python</span> in English :-</b>"
                    },
                    {
                        "component": "youtube",
                        "value": "UlpurGz1-TU"
                    },
                    {
                        "component": "text",
                        "value": "<b>Introduction of <span style=\"\">Python</span> in Hindi :-</b>"
                    },
                    {
                        "component": "youtube",
                        "value": "iWNpVTYSt74"
                    }
                ]
            },
            {
                "id": "5318",
                "parent_exercise_id": "5317",
                "course_id": "191",
                "name": "definitions-part-1",
                "slug": "introduction-of-python_json__basic-definitions/definitions-part-1_json",
                "sequence_num": 701,
                "review_type": "manual",
                "submission_type": null,
                "github_link": "https://github.com/navgurukul/newton/tree/master/introduction-of-python_json/basic-definitions/definitions-part-1.json",
                "solution": null,
                "content": [
                    {
                        "component": "header",
                        "variant": 2,
                        "value": "Basic Definitions"
                    },
                    {
                        "component": "header",
                        "variant": 3,
                        "value": "Program"
                    },
                    {
                        "component": "text",
                        "value": "<b>A set of instructions is called a program.</b>"
                    },
                    {
                        "component": "header",
                        "variant": 4,
                        "value": "Example :-"
                    },
                    {
                        "component": "code",
                        "type": "python",
                        "title": "",
                        "value": "a=5<br>b=9<br>print(a+b)"
                    },
                    {
                        "component": "header",
                        "variant": 3,
                        "value": "<span style=\"\">Output</span> :-"
                    },
                    {
                        "component": "text",
                        "value": "<span style=\"color: #eb9371; background-color: rgba(39, 41, 43, 0.83); box-shadow: 2px 2px 2px rgba(22, 9, 1, 0.6); border-radius: 2px; padding: 2px\">14</span> "
                    },
                    {
                        "component": "header",
                        "variant": 3,
                        "value": "<span style=\"color: #eb9371; background-color: rgba(39, 41, 43, 0.83); box-shadow: 2px 2px 2px rgba(22, 9, 1, 0.6); border-radius: 2px; padding: 2px\">Real Life Example :-</span>"
                    },
                    {
                        "component": "text",
                        "value": "For example if we want to make tea ,we will first collect all the ingredients required to make tea like sugar, tea leaves, milk, these are all the instructions that tell what is needed to make tea."
                    },
                    {
                        "component": "text",
                        "value": "Another example, if we want to go to the market, this is a program and the way/ route we follow to go to  the market is called programming."
                    },
                    {
                        "component": "header",
                        "variant": 4,
                        "value": "Note :-"
                    },
                    {
                        "component": "text",
                        "value": "To know more about Program in detail, please visit this link."
                    },
                    {
                        "component": "text",
                        "value": "<a href=\"https://youtu.be/SDxPjsRksw0\">Program</a>"
                    },
                    {
                        "component": "header",
                        "variant": 3,
                        "value": "Programming"
                    },
                    {
                        "component": "text",
                        "value": "The process of doing any work is called <span style=\"color: #eb9371; background-color: rgba(39, 41, 43, 0.83); box-shadow: 2px 2px 2px rgba(22, 9, 1, 0.6); border-radius: 2px; padding: 2px\">programming</span>."
                    },
                    {
                        "component": "header",
                        "variant": 3,
                        "value": "Example :-"
                    },
                    {
                        "component": "text",
                        "value": "In the process of making tea."
                    },
                    {
                        "component": "text",
                        "value": "Like first we take a bowl ,add water, sugar, tea leaves and milk then boil it, hence the tea is prepared. Similarly to do computer programming we need to follow some rules which we will study today."
                    },
                    {
                        "component": "header",
                        "variant": 3,
                        "value": "Example :-"
                    },
                    {
                        "component": "code",
                        "type": "python",
                        "title": "",
                        "value": "a=5<br>b=7<br>print(a+b)"
                    },
                    {
                        "component": "header",
                        "variant": 3,
                        "value": "<span style=\"\">Output</span> :-"
                    },
                    {
                        "component": "text",
                        "value": "<span style=\"color: #eb9371; background-color: rgba(39, 41, 43, 0.83); box-shadow: 2px 2px 2px rgba(22, 9, 1, 0.6); border-radius: 2px; padding: 2px\">12</span>"
                    },
                    {
                        "component": "text",
                        "value": "In this example we are adding a and b, here to add  is a process and this process is called programming. Whatever work we do, the process of doing that work is called programming."
                    },
                    {
                        "component": "header",
                        "variant": 4,
                        "value": "Note :-"
                    },
                    {
                        "component": "text",
                        "value": "To know about Programming in detail you can go to this link.\n<a href=\"https://youtu.be/ZMMVf4Qv\">Programming</a>"
                    },
                    {
                        "component": "header",
                        "variant": 3,
                        "value": "<span style=\"color: #eb9371; background-color: rgba(39, 41, 43, 0.83); box-shadow: 2px 2px 2px rgba(22, 9, 1, 0.6); border-radius: 2px; padding: 2px\">High Level Language</span>"
                    },
                    {
                        "component": "text",
                        "value": "High level language is that language that humans can easily understand but computers cannot."
                    },
                    {
                        "component": "text",
                        "value": "<span style=\"color: #eb9371; background-color: rgba(39, 41, 43, 0.83); box-shadow: 2px 2px 2px rgba(22, 9, 1, 0.6); border-radius: 2px; padding: 2px\">Example</span>"
                    },
                    {
                        "component": "text",
                        "value": "Just as we can understand English but computers cannot understand English. Computer understands  0 and 1 ."
                    },
                    {
                        "component": "header",
                        "variant": 3,
                        "value": "<span style=\"color: #eb9371; background-color: rgba(39, 41, 43, 0.83); box-shadow: 2px 2px 2px rgba(22, 9, 1, 0.6); border-radius: 2px; padding: 2px\">Low Level Language</span>"
                    },
                    {
                        "component": "text",
                        "value": "Low level language is also called  machine language which is made of 1 or 0, humans cannot understand low level language but computers can easily understand."
                    },
                    {
                        "component": "text",
                        "value": "Note- Study in detail about High level and low level language. <a href=\"https://youtu.be/bqyVOEgDSj8\">High or low level language</a> "
                    },
                    {
                        "component": "header",
                        "variant": 3,
                        "value": "<span style=\"color: #eb9371; background-color: rgba(39, 41, 43, 0.83); box-shadow: 2px 2px 2px rgba(22, 9, 1, 0.6); border-radius: 2px; padding: 2px\">Syntax</span>"
                    },
                    {
                        "component": "text",
                        "value": "<span style=\"color: #eb9371; background-color: rgba(39, 41, 43, 0.83); box-shadow: 2px 2px 2px rgba(22, 9, 1, 0.6); border-radius: 2px; padding: 2px\">Syntax</span> is just like <span style=\"\">python</span> grammar. It is a set of rules that tells how to write and run a <span style=\"\">python</span> <span style=\"\">code</span>."
                    },
                    {
                        "component": "header",
                        "variant": 3,
                        "value": "Example :-"
                    },
                    {
                        "component": "text",
                        "value": "Suppose you have written (<span style=\"\">Python</span> awesome) in English , do you think that it is grammatically correct or is there anything missing?<br>Yes, you are correct, this sentence is grammatically wrong  (<span style=\"\">python</span> is awesome ) this sentence is correct , just as in English, there are certain rules of grammar similarly to write some  <span style=\"\">python</span> <span style=\"\">code</span> some <span style=\"\">syntax</span> rule  are there ,like while writing <span style=\"\">code</span>  if we forget to put any symbol, Col\u00f3n(:) or parenthesis  () etc, then it will display a message of <span style=\"\">syntax</span> <span style=\"\">error</span>."
                    },
                    {
                        "component": "header",
                        "variant": 3,
                        "value": "Example :-"
                    },
                    {
                        "component": "code",
                        "type": "python",
                        "title": "",
                        "value": "num=5<br>print(num"
                    },
                    {
                        "component": "header",
                        "variant": 3,
                        "value": "<span style=\"\">Output</span> :-"
                    },
                    {
                        "component": "text",
                        "value": "<span style=\"color: #eb9371; background-color: rgba(39, 41, 43, 0.83); box-shadow: 2px 2px 2px rgba(22, 9, 1, 0.6); border-radius: 2px; padding: 2px\">Syntax Error: unexpected EOF while parsing</span>"
                    },
                    {
                        "component": "code",
                        "type": "python",
                        "title": "",
                        "value": "num=5<br>print \"a\""
                    },
                    {
                        "component": "header",
                        "variant": 3,
                        "value": "<span style=\"\">Output</span> :-"
                    },
                    {
                        "component": "text",
                        "value": "<span style=\"color: #eb9371; background-color: rgba(39, 41, 43, 0.83); box-shadow: 2px 2px 2px rgba(22, 9, 1, 0.6); border-radius: 2px; padding: 2px\">Syntax Error: invalid syntax</span>"
                    },
                    {
                        "component": "text",
                        "value": "In this example you saw that while printing I forgot to put one parenthesis, as a result of this it is showing <span style=\"\">syntax</span> <span style=\"\">error</span>."
                    },
                    {
                        "component": "header",
                        "variant": 3,
                        "value": "<span style=\"color: #eb9371; background-color: rgba(39, 41, 43, 0.83); box-shadow: 2px 2px 2px rgba(22, 9, 1, 0.6); border-radius: 2px; padding: 2px\">Algorithm</span>"
                    },
                    {
                        "component": "text",
                        "value": "Algorithm is a step by step process to solve any problem. With the help of this we break the problem into smaller parts and then solve it. It can also be defined as a procedure or formula to solve any problem or task."
                    },
                    {
                        "component": "header",
                        "variant": 3,
                        "value": "Example :-"
                    },
                    {
                        "component": "text",
                        "value": "If we want to make cookies ,so first we collect all the ingredients and then we will make it step by step, if we miss any step then cookies would not be tasty or good.<br><br><br>",
                        "decoration": {
                            "type": "bullet"
                        }
                    },
                    {
                        "component": "text",
                        "value": "To make tea first of all we will take<br>",
                        "decoration": {
                            "type": "bullet"
                        }
                    },
                    {
                        "component": "text",
                        "value": "a bowl ",
                        "decoration": {
                            "type": "bullet"
                        }
                    },
                    {
                        "component": "text",
                        "value": "then water",
                        "decoration": {
                            "type": "bullet"
                        }
                    },
                    {
                        "component": "text",
                        "value": "Sugar and tea leaf",
                        "decoration": {
                            "type": "bullet"
                        }
                    },
                    {
                        "component": "text",
                        "value": "milk<br><br>",
                        "decoration": {
                            "type": "bullet"
                        }
                    },
                    {
                        "component": "text",
                        "value": "As you saw above that we have made a list of ingredients required to make tea i.e. we have collected all the things to make tea. This is called algorithm, here we have taken things step by step."
                    },
                    {
                        "component": "header",
                        "variant": 4,
                        "value": "Note :-"
                    },
                    {
                        "component": "text",
                        "value": "To study Algorithm in detail please click this link.  <a href=\"https://youtu.be/MvayENwOCNM\">Algorithm</a>"
                    }
                ]
            },
            {
                "id": "5319",
                "parent_exercise_id": "5317",
                "course_id": "191",
                "name": "definition-part-2",
                "slug": "introduction-of-python_json__basic-definitions/definition-part-2_json",
                "sequence_num": 702,
                "review_type": "manual",
                "submission_type": null,
                "github_link": "https://github.com/navgurukul/newton/tree/master/introduction-of-python_json/basic-definitions/definition-part-2.json",
                "solution": null,
                "content": [
                    {
                        "component": "header",
                        "variant": 2,
                        "value": "Definitions"
                    },
                    {
                        "component": "header",
                        "variant": 3,
                        "value": "Binary Numbers"
                    },
                    {
                        "component": "text",
                        "value": "<span style=\"color: #eb9371; background-color: rgba(39, 41, 43, 0.83); box-shadow: 2px 2px 2px rgba(22, 9, 1, 0.6); border-radius: 2px; padding: 2px\">Binary numbers</span> are known as machine language or low level language, binary numbers are made of 0 and 1 which humans cannot understand but computers can."
                    },
                    {
                        "component": "header",
                        "variant": 3,
                        "value": "<span style=\"color: #eb9371; background-color: rgba(39, 41, 43, 0.83); box-shadow: 2px 2px 2px rgba(22, 9, 1, 0.6); border-radius: 2px; padding: 2px\">Interpreter</span>"
                    },
                    {
                        "component": "text",
                        "value": "It checks the <span style=\"\">code</span> line by line and the line at which <span style=\"\">error</span> is present, <span style=\"\">interpreter</span>  stops the <span style=\"\">code</span> at that line and shows the name of <span style=\"\">error</span>.<br><span style=\"color: #eb9371; background-color: rgba(39, 41, 43, 0.83); box-shadow: 2px 2px 2px rgba(22, 9, 1, 0.6); border-radius: 2px; padding: 2px\">Interpreter</span>  converts high level language to low level language with the help of which the computer is able to run the <span style=\"\">code</span>."
                    },
                    {
                        "component": "text",
                        "value": "<b><span style=\"\">Interpreter</span> is used for <span style=\"\">Python</span> and Ruby programming languages.</b>"
                    },
                    {
                        "component": "header",
                        "variant": 4,
                        "value": "Example :-"
                    },
                    {
                        "component": "code",
                        "type": "python",
                        "title": "",
                        "value": "a = megha<br>print(a)"
                    },
                    {
                        "component": "header",
                        "variant": 4,
                        "value": "<span style=\"\">Output</span> :-"
                    },
                    {
                        "component": "text",
                        "value": "<span style=\"color: #eb9371; background-color: rgba(39, 41, 43, 0.83); box-shadow: 2px 2px 2px rgba(22, 9, 1, 0.6); border-radius: 2px; padding: 2px\">file \"&lt;string&gt;\",line 1, in &lt;module&gt;</span>"
                    },
                    {
                        "component": "text",
                        "value": "In  this example you saw that I have taken a <span style=\"\">variable</span> named <b>a</b> and assigned/given  a <span style=\"\">string</span> value to it but I forgot to put \" \"(quote). So, <span style=\"\">python</span> was not able to identify the type of value I gave to the <span style=\"\">variable</span> <b>a</b>. Therefore, the <span style=\"\">interpreter</span> stopped the <span style=\"\">code</span> at the line that contained <span style=\"\">error</span>, and displayed the <span style=\"\">error</span>."
                    },
                    {
                        "component": "header",
                        "variant": 3,
                        "value": "<span style=\"color: #eb9371; background-color: rgba(39, 41, 43, 0.83); box-shadow: 2px 2px 2px rgba(22, 9, 1, 0.6); border-radius: 2px; padding: 2px\">Compiler</span>"
                    },
                    {
                        "component": "text",
                        "value": "<span style=\"color: #eb9371; background-color: rgba(39, 41, 43, 0.83); box-shadow: 2px 2px 2px rgba(22, 9, 1, 0.6); border-radius: 2px; padding: 2px\">Compiler</span> is a software that scans the complete <span style=\"\">code</span> in one go and if the <span style=\"\">code</span> contains any <span style=\"\">error</span>, then it shows the <span style=\"\">error</span> at the end of the <span style=\"\">code</span>.<br>Whereas the <span style=\"color: #eb9371; background-color: rgba(39, 41, 43, 0.83); box-shadow: 2px 2px 2px rgba(22, 9, 1, 0.6); border-radius: 2px; padding: 2px\">interpreter</span>, stops the <span style=\"\">code</span> at the line that contains <span style=\"\">error</span>."
                    },
                    {
                        "component": "text",
                        "value": "<b><span style=\"\">Compiler</span> is used in C and C++ programming languages.</b>"
                    },
                    {
                        "component": "header",
                        "variant": 4,
                        "value": "Note :"
                    },
                    {
                        "component": "text",
                        "value": "To study Compiler and Interpreter in detail please click this link.  <a href=\"https://www.youtube.com/watch?v=e4ax90XmUBc&t=156s\">Compiler and Interpreter</a> <br><br>",
                        "decoration": {
                            "type": "bullet"
                        }
                    },
                    {
                        "component": "header",
                        "variant": 3,
                        "value": "<span style=\"color: #eb9371; background-color: rgba(39, 41, 43, 0.83); box-shadow: 2px 2px 2px rgba(22, 9, 1, 0.6); border-radius: 2px; padding: 2px\">Case Sensitive</span>"
                    },
                    {
                        "component": "text",
                        "value": "Case sensitive means that the text that we have typed should be exactly same as we type it anywhere in the <span style=\"\">code</span>."
                    },
                    {
                        "component": "header",
                        "variant": 4,
                        "value": "Example :-"
                    },
                    {
                        "component": "code",
                        "type": "python",
                        "title": "",
                        "value": "var = 5<br>print(Var)"
                    },
                    {
                        "component": "header",
                        "variant": 4,
                        "value": "<span style=\"\">Output</span> :-"
                    },
                    {
                        "component": "text",
                        "value": "<span style=\"color: #eb9371; background-color: rgba(39, 41, 43, 0.83); box-shadow: 2px 2px 2px rgba(22, 9, 1, 0.6); border-radius: 2px; padding: 2px\">Var is not defined</span>"
                    },
                    {
                        "component": "text",
                        "value": "For example ,in the above example ,we have assigned a  <span style=\"\">variable</span> named <b>var</b> and while printing we typed <b>Var</b>, so an <span style=\"\">error</span> was displayed because in <span style=\"\">python</span> var and Var are different. In <span style=\"\">python</span> small letters and capital letters are considered different."
                    },
                    {
                        "component": "text",
                        "value": "Note- You can click this link to study  case sensitive in detail . <a href=\"https://youtu.be/mNxDbLBBzno\">Case Sensitive</a> "
                    },
                    {
                        "component": "header",
                        "variant": 3,
                        "value": "<span style=\"color: #eb9371; background-color: rgba(39, 41, 43, 0.83); box-shadow: 2px 2px 2px rgba(22, 9, 1, 0.6); border-radius: 2px; padding: 2px\">Error/ Bugs</span>"
                    },
                    {
                        "component": "text",
                        "value": "When we make any mistake while writing the <span style=\"\">code</span>, that mistake is called <span style=\"\">error</span>/bug."
                    },
                    {
                        "component": "header",
                        "variant": 4,
                        "value": "Example :-"
                    },
                    {
                        "component": "code",
                        "type": "python",
                        "title": "",
                        "value": "num=5<br>print(num"
                    },
                    {
                        "component": "header",
                        "variant": 4,
                        "value": "<span style=\"\">Output</span> :-"
                    },
                    {
                        "component": "text",
                        "value": "<span style=\"color: #eb9371; background-color: rgba(39, 41, 43, 0.83); box-shadow: 2px 2px 2px rgba(22, 9, 1, 0.6); border-radius: 2px; padding: 2px\">SyntaxError: unexpected EOF while parsing</span>"
                    },
                    {
                        "component": "header",
                        "variant": 4,
                        "value": "Example :-"
                    },
                    {
                        "component": "code",
                        "type": "python",
                        "title": "",
                        "value": "num=5<br>print \"a\""
                    },
                    {
                        "component": "header",
                        "variant": 3,
                        "value": "<span style=\"\">Output</span> :-"
                    },
                    {
                        "component": "text",
                        "value": "<span style=\"color: #eb9371; background-color: rgba(39, 41, 43, 0.83); box-shadow: 2px 2px 2px rgba(22, 9, 1, 0.6); border-radius: 2px; padding: 2px\">SyntaxError: invalid syntax</span>"
                    },
                    {
                        "component": "text",
                        "value": "In this example you saw that while printing I forgot to put parenthesis so it showed us a <span style=\"\">syntax</span> <span style=\"\">error</span> which means our <span style=\"\">code</span> has some mistake/<span style=\"\">error</span>."
                    },
                    {
                        "component": "header",
                        "variant": 3,
                        "value": "Debugs"
                    },
                    {
                        "component": "text",
                        "value": "Debug means to solve bug/<span style=\"\">error</span> in the given <span style=\"\">code</span> or removing the <span style=\"\">error</span> from the <span style=\"\">code</span> and writing the correct <span style=\"\">code</span> which is as per the <span style=\"\">syntax</span>."
                    },
                    {
                        "component": "header",
                        "variant": 4,
                        "value": "Example :-"
                    },
                    {
                        "component": "code",
                        "type": "python",
                        "title": "",
                        "value": "num=5<br>print(num)"
                    },
                    {
                        "component": "header",
                        "variant": 3,
                        "value": "<span style=\"\">Output</span> :-"
                    },
                    {
                        "component": "text",
                        "value": "<span style=\"color: #eb9371; background-color: rgba(39, 41, 43, 0.83); box-shadow: 2px 2px 2px rgba(22, 9, 1, 0.6); border-radius: 2px; padding: 2px\">5</span>"
                    },
                    {
                        "component": "header",
                        "variant": 4,
                        "value": "Example :-"
                    },
                    {
                        "component": "code",
                        "type": "python",
                        "title": "",
                        "value": "num=2<br>Print (num)"
                    },
                    {
                        "component": "header",
                        "variant": 3,
                        "value": "<span style=\"\">Output</span> :-"
                    },
                    {
                        "component": "text",
                        "value": "<span style=\"color: #eb9371; background-color: rgba(39, 41, 43, 0.83); box-shadow: 2px 2px 2px rgba(22, 9, 1, 0.6); border-radius: 2px; padding: 2px\">2</span>"
                    },
                    {
                        "component": "text",
                        "value": "As you saw in the bug example   there was a bug present in the second <span style=\"\">code</span> so we debugged that <span style=\"\">code</span>."
                    },
                    {
                        "component": "header",
                        "variant": 3,
                        "value": "<span style=\"color: #eb9371; background-color: rgba(39, 41, 43, 0.83); box-shadow: 2px 2px 2px rgba(22, 9, 1, 0.6); border-radius: 2px; padding: 2px\">Source code</span>"
                    },
                    {
                        "component": "text",
                        "value": "Source <span style=\"\">code</span> is that <span style=\"\">code</span> which humans can easily understand."
                    },
                    {
                        "component": "header",
                        "variant": 3,
                        "value": "Example :-"
                    },
                    {
                        "component": "code",
                        "type": "python",
                        "title": "",
                        "value": "name=\"python\"<br>print(name)"
                    },
                    {
                        "component": "header",
                        "variant": 3,
                        "value": "<span style=\"\">Output</span> :-"
                    },
                    {
                        "component": "text",
                        "value": "<span style=\"color: #eb9371; background-color: rgba(39, 41, 43, 0.83); box-shadow: 2px 2px 2px rgba(22, 9, 1, 0.6); border-radius: 2px; padding: 2px\">python</span>"
                    },
                    {
                        "component": "text",
                        "value": "In this example you saw that we have taken a <span style=\"\">variable</span> named as <b>name</b> and we have stored <span style=\"\">python</span> in it.Ypu can easily read and understand this <span style=\"\">code</span> .This <span style=\"\">code</span> is called <span style=\"color: #eb9371; background-color: rgba(39, 41, 43, 0.83); box-shadow: 2px 2px 2px rgba(22, 9, 1, 0.6); border-radius: 2px; padding: 2px\">source code/ main code</span>."
                    },
                    {
                        "component": "image",
                        "value": "https://www.grammar-monster.com/glossary/pics/types_of_brackets.png",
                        "alt": "definition-part-2_key47"
                    }
                ]
            },
            {
                "id": "6535",
                "parent_exercise_id": null,
                "course_id": "191",
                "name": "ipython",
                "slug": "introduction-of-python_json__ipython_json",
                "sequence_num": 800,
                "review_type": "manual",
                "submission_type": null,
                "github_link": "https://github.com/navgurukul/newton/tree/master/introduction-of-python_json/ipython.json",
                "solution": null,
                "content": [
                    {
                        "component": "header",
                        "variant": 2,
                        "value": "Now we will learn about <span style=\"\">iPython</span>"
                    },
                    {
                        "component": "text",
                        "value": "Here we will learn about, what is <span style=\"color: #eb9371; background-color: rgba(39, 41, 43, 0.83); box-shadow: 2px 2px 2px rgba(22, 9, 1, 0.6); border-radius: 2px; padding: 2px\">ipython</span> and why do we use it?"
                    },
                    {
                        "component": "text",
                        "value": "When you write <span style=\"color: #eb9371; background-color: rgba(39, 41, 43, 0.83); box-shadow: 2px 2px 2px rgba(22, 9, 1, 0.6); border-radius: 2px; padding: 2px\">python</span> on the <span style=\"\">Terminal</span>, then <i><span style=\"\">python</span> <span style=\"\">shell</span></i> opens on the <span style=\"\">Terminal</span>. You write your <span style=\"\">python</span> <span style=\"\">code</span> on the <i><span style=\"\">python</span> <span style=\"\">shell</span></i> to run it.<br><span style=\"color: #eb9371; background-color: rgba(39, 41, 43, 0.83); box-shadow: 2px 2px 2px rgba(22, 9, 1, 0.6); border-radius: 2px; padding: 2px\">iPython</span> also does the same work but it provides some extra features. Some of those features we will study below:"
                    },
                    {
                        "component": "header",
                        "variant": 2,
                        "value": "Difference between <span style=\"color: #eb9371; background-color: rgba(39, 41, 43, 0.83); box-shadow: 2px 2px 2px rgba(22, 9, 1, 0.6); border-radius: 2px; padding: 2px\">python</span> and <span style=\"color: #eb9371; background-color: rgba(39, 41, 43, 0.83); box-shadow: 2px 2px 2px rgba(22, 9, 1, 0.6); border-radius: 2px; padding: 2px\">iPython</span>"
                    },
                    {
                        "component": "header",
                        "variant": 3,
                        "value": "First with <span style=\"\">iPython</span>"
                    },
                    {
                        "component": "text",
                        "value": "First, on the <span style=\"\">Terminal</span> write <span style=\"color: #eb9371; background-color: rgba(39, 41, 43, 0.83); box-shadow: 2px 2px 2px rgba(22, 9, 1, 0.6); border-radius: 2px; padding: 2px\">ipython</span> and press <i>Enter</i>.<br>Now, write <span style=\"color: #eb9371; background-color: rgba(39, 41, 43, 0.83); box-shadow: 2px 2px 2px rgba(22, 9, 1, 0.6); border-radius: 2px; padding: 2px\">cd Downloads</span> in it and press <i>Enter</i>.<br>Then write <span style=\"color: #eb9371; background-color: rgba(39, 41, 43, 0.83); box-shadow: 2px 2px 2px rgba(22, 9, 1, 0.6); border-radius: 2px; padding: 2px\">ls</span> and press <i>Enter</i>.<br>You will be able to see all the <b>folder and <span style=\"\">files</span></b> that you kept under the Downloads folder.<br>Now to come outside the <span style=\"\">iPython</span> <span style=\"\">shell</span> write <span style=\"color: #eb9371; background-color: rgba(39, 41, 43, 0.83); box-shadow: 2px 2px 2px rgba(22, 9, 1, 0.6); border-radius: 2px; padding: 2px\">quit</span> inside the <span style=\"\">shell</span> and press <b>Enter</b>."
                    },
                    {
                        "component": "header",
                        "variant": 3,
                        "value": "Now we will do the same thing with <span style=\"\">python</span>"
                    },
                    {
                        "component": "text",
                        "value": "Write <span style=\"color: #eb9371; background-color: rgba(39, 41, 43, 0.83); box-shadow: 2px 2px 2px rgba(22, 9, 1, 0.6); border-radius: 2px; padding: 2px\">ipython</span> on the <span style=\"color: #eb9371; background-color: rgba(39, 41, 43, 0.83); box-shadow: 2px 2px 2px rgba(22, 9, 1, 0.6); border-radius: 2px; padding: 2px\">Terminal</span> and press <b>Enter</b>"
                    },
                    {
                        "component": "text",
                        "value": "Now write <span style=\"color: #eb9371; background-color: rgba(39, 41, 43, 0.83); box-shadow: 2px 2px 2px rgba(22, 9, 1, 0.6); border-radius: 2px; padding: 2px\">cd Downloads</span> and press <b>Enter</b>."
                    },
                    {
                        "component": "code",
                        "type": "python",
                        "title": "",
                        "value": ">>> cd Downloads<br>  File \"<stdin>\", line 1<br>    cd Downloads<br>               ^<br>SyntaxError: invalid syntax<br>>>>"
                    },
                    {
                        "component": "text",
                        "value": "You will be able to see something like this on the <span style=\"\">Terminal</span>?<br>This means you cannot go to the <b>Downloads</b> folder with the help of  <b><span style=\"\">python</span> <span style=\"\">shell</span></b>."
                    },
                    {
                        "component": "text",
                        "value": "For this, you need to come out of the <b><span style=\"\">python</span> <span style=\"\">shell</span></b> and for that, you need to type <span style=\"color: #eb9371; background-color: rgba(39, 41, 43, 0.83); box-shadow: 2px 2px 2px rgba(22, 9, 1, 0.6); border-radius: 2px; padding: 2px\">quit</span> on the  <b><span style=\"\">python</span> <span style=\"\">shell</span></b>."
                    },
                    {
                        "component": "text",
                        "value": "Now after coming outside type <span style=\"color: #eb9371; background-color: rgba(39, 41, 43, 0.83); box-shadow: 2px 2px 2px rgba(22, 9, 1, 0.6); border-radius: 2px; padding: 2px\">cd Downloads</span> and then type  <span style=\"color: #eb9371; background-color: rgba(39, 41, 43, 0.83); box-shadow: 2px 2px 2px rgba(22, 9, 1, 0.6); border-radius: 2px; padding: 2px\">ls</span> you will be able to see whatever is present in the Downloads."
                    },
                    {
                        "component": "text",
                        "value": "You cannot change your <b>folder</b> by using a normal <b><span style=\"\">python</span> <span style=\"\">shell</span></b>. For that, you need to come out of the  <b><span style=\"\">python</span> <span style=\"\">shell</span></b>. But you can easily change the <b>folder</b> inside this <span style=\"\">python</span> <span style=\"\">shell</span> so that you don't need to come out of the <b><span style=\"\">iPython</span> <span style=\"\">shell</span></b>."
                    },
                    {
                        "component": "text",
                        "value": "And when you will type in <b><span style=\"\">python</span> <span style=\"\">shell</span></b>."
                    },
                    {
                        "component": "code",
                        "type": "python",
                        "title": "",
                        "value": ">>> if True:<br>..."
                    },
                    {
                        "component": "text",
                        "value": "Then note that the cursor <span style=\"color: #eb9371; background-color: rgba(39, 41, 43, 0.83); box-shadow: 2px 2px 2px rgba(22, 9, 1, 0.6); border-radius: 2px; padding: 2px\">(**|**)</span>comes without any space after this <span style=\"color: #eb9371; background-color: rgba(39, 41, 43, 0.83); box-shadow: 2px 2px 2px rgba(22, 9, 1, 0.6); border-radius: 2px; padding: 2px\">...</span> .<br>But if you will type it in <b><span style=\"\">iPython</span> <span style=\"\">shell</span></b> then it will show like this."
                    },
                    {
                        "component": "code",
                        "type": "python",
                        "title": "",
                        "value": "In [1]: if True:<br>   ...:     |"
                    },
                    {
                        "component": "text",
                        "value": "Then you will see that the cursor <span style=\"color: #eb9371; background-color: rgba(39, 41, 43, 0.83); box-shadow: 2px 2px 2px rgba(22, 9, 1, 0.6); border-radius: 2px; padding: 2px\"></span>(<b>|</b>)` comes after some spaces.<br>We call this <b><span style=\"\">Indentation</span></b>. When you will write the <span style=\"\">code</span> for the first time <b>50% <span style=\"\">error</span></b> will be there because of lack of <b><span style=\"\">Indentation</span></b>.<br>Hence, <span style=\"\">iPython</span> makes the life of an engineer very easy by providing extra features."
                    },
                    {
                        "component": "text",
                        "value": "When <span style=\"\">iPython</span> opens you can write <span style=\"\">code</span> in it. If you are copy-pasting the <span style=\"\">code</span> from somewhere then press <span style=\"color: #eb9371; background-color: rgba(39, 41, 43, 0.83); box-shadow: 2px 2px 2px rgba(22, 9, 1, 0.6); border-radius: 2px; padding: 2px\">Ctrl + C</span> to copy-paste and open <span style=\"\">iPython</span> and type <span style=\"color: #eb9371; background-color: rgba(39, 41, 43, 0.83); box-shadow: 2px 2px 2px rgba(22, 9, 1, 0.6); border-radius: 2px; padding: 2px\">%paste</span> for pasting the <span style=\"\">code</span>."
                    },
                    {
                        "component": "header",
                        "variant": 3,
                        "value": "Very Important Rules"
                    },
                    {
                        "component": "text",
                        "value": "Run every example on <span style=\"color: #eb9371; background-color: rgba(39, 41, 43, 0.83); box-shadow: 2px 2px 2px rgba(22, 9, 1, 0.6); border-radius: 2px; padding: 2px\">iPython shell</span>. If you don't do this you will make a fool of yourself.",
                        "decoration": {
                            "type": "bullet"
                        }
                    },
                    {
                        "component": "text",
                        "value": "To copy-paste and run the code will not help you in understanding the code. You have to run every code by yourself.",
                        "decoration": {
                            "type": "bullet"
                        }
                    },
                    {
                        "component": "text",
                        "value": "Words written in UPPER CASE or <b>bold letters</b> are very important. Learn them, you will come across them many times. ",
                        "decoration": {
                            "type": "bullet"
                        }
                    },
                    {
                        "component": "text",
                        "value": "During the course You need to answer some questions at times. To answer those questions you can always upload a file.<br><br>",
                        "decoration": {
                            "type": "bullet"
                        }
                    },
                    {
                        "component": "header",
                        "variant": 3,
                        "value": "Some <span style=\"\">Code</span> Samples"
                    },
                    {
                        "component": "text",
                        "value": "In this section, some <span style=\"\">code</span> samples are given. To get comfor<span style=\"\">tab</span>le with <span style=\"color: #eb9371; background-color: rgba(39, 41, 43, 0.83); box-shadow: 2px 2px 2px rgba(22, 9, 1, 0.6); border-radius: 2px; padding: 2px\">iPython</span>, you can run them on <span style=\"color: #eb9371; background-color: rgba(39, 41, 43, 0.83); box-shadow: 2px 2px 2px rgba(22, 9, 1, 0.6); border-radius: 2px; padding: 2px\">ipython</span>."
                    },
                    {
                        "component": "header",
                        "variant": 4,
                        "value": "Example 1 :-"
                    },
                    {
                        "component": "code",
                        "type": "python",
                        "title": "",
                        "value": "print (\"It will print this.\")<br>print (\"Cool Stuff \"*10)"
                    },
                    {
                        "component": "header",
                        "variant": 4,
                        "value": "Example 2 :-"
                    },
                    {
                        "component": "code",
                        "type": "python",
                        "title": "",
                        "value": "time = input(\"Is it morning or evening? (morning/evening) \")<br>if time == \"morning\":<br>    print (\"Let's go for a run!\")<br>elif time == \"evening\":<br>    print (\"Let's go out for a coffee.\")<br>else:<br>    print (\"I did not understand what input you put?\")"
                    }
                ]
            },
            {
                "id": "6533",
                "parent_exercise_id": null,
                "course_id": "191",
                "name": "comments",
                "slug": "introduction-of-python_json__comments_json",
                "sequence_num": 900,
                "review_type": "manual",
                "submission_type": null,
                "github_link": "https://github.com/navgurukul/newton/tree/master/introduction-of-python_json/comments.json",
                "solution": null,
                "content": [
                    {
                        "component": "header",
                        "variant": 2,
                        "value": "Comments"
                    },
                    {
                        "component": "text",
                        "value": "We can write <span style=\"color: #eb9371; background-color: rgba(39, 41, 43, 0.83); box-shadow: 2px 2px 2px rgba(22, 9, 1, 0.6); border-radius: 2px; padding: 2px\">comments</span> in any program . When we <i>run</i> the <i>program</i> these comments do not get <i><span style=\"\">execute</span>d</i>."
                    },
                    {
                        "component": "text",
                        "value": "<span style=\"color: #eb9371; background-color: rgba(39, 41, 43, 0.83); box-shadow: 2px 2px 2px rgba(22, 9, 1, 0.6); border-radius: 2px; padding: 2px\">Comments</span> are written for our understanding, and for the people who are working on that <span style=\"\">code</span> with us or people with whom we will work later etc. For the understanding of all these people, comments are used."
                    },
                    {
                        "component": "code",
                        "type": "python",
                        "title": "",
                        "value": "print (\"This will be printed.\")<br>print (\"This line will also be printed\")<br># This is a comment.<br># You can write it for your ease.<br># Any line that starts with \"#\" (hash) is called a  comment.<br># We write these lines as programmers, for our own ease. Computer ignores them.<br>print (\"Computer will not be able to read above comments,but will print this line.\")"
                    },
                    {
                        "component": "header",
                        "variant": 3,
                        "value": "What does your <span style=\"color: #eb9371; background-color: rgba(39, 41, 43, 0.83); box-shadow: 2px 2px 2px rgba(22, 9, 1, 0.6); border-radius: 2px; padding: 2px\">program</span>do, is very important to write in <span style=\"color: #eb9371; background-color: rgba(39, 41, 43, 0.83); box-shadow: 2px 2px 2px rgba(22, 9, 1, 0.6); border-radius: 2px; padding: 2px\">comments</span>in a given technical language?"
                    },
                    {
                        "component": "text",
                        "value": "<i>Many times we have seen that the students who don't write <span style=\"color: #eb9371; background-color: rgba(39, 41, 43, 0.83); box-shadow: 2px 2px 2px rgba(22, 9, 1, 0.6); border-radius: 2px; padding: 2px\">comments</span> properly during  interviews, they get a very negative feedback in interviews.</i><br><i>If you make this as a habit then your own  understanding will improve and in future you will not face any problem.</i>"
                    }
                ]
            }
        ]
    }
}